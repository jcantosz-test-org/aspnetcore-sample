name: Deploy to Azure Function (Windows)

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      ENVIRONMENT_URL:
        required: false
        type: string
      ARTIFACT_NAME:
        required: true
        type: string
      RELEASE_VERSION:
        required: false
        type: string
      ARTIFACT_DOWNLOAD_PATH:
        required: false
        type: string
        default: artifacts
      AZURE_FUNCTIONAPP_PACKAGE_PATH:
        required: true
        type: string
      AZURE_FUNCTIONAPP_NAME:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      RESOURCE_GROUP:
        required: true

jobs:
  deploy:
    runs-on: windows-2019
    environment: 
      name: ${{ inputs.ENVIRONMENT }}
      url: ${{ inputs.ENVIRONMENT_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Download a single artifact
        if: ${{ inputs.ENVIRONMENT == 'dev' || inputs.ENVIRONMENT == 'qa' }}
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ inputs.ARTIFACT_NAME }}
          path: ${{ inputs.ARTIFACT_DOWNLOAD_PATH }}

      - name: Download release
        if: ${{ inputs.ENVIRONMENT == 'uat' || inputs.ENVIRONMENT == 'prod' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download ${{ inputs.RELEASE_VERSION }} --pattern '${{ inputs.ARTIFACT_NAME }}.zip'
          Expand-Archive ${{ inputs.ARTIFACT_NAME }}.zip -DestinationPath ${{ inputs.ARTIFACT_DOWNLOAD_PATH }}

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ inputs.ARTIFACT_DOWNLOAD_PATH }}/${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

      - name: "write deploying info to step summary"
        run: |
          echo "Deployed Azure Function ${{ inputs.AZURE_FUNCTIONAPP_NAME }} to ${{ inputs.ENVIRONMENT }} (${{ inputs.ENVIRONMENT_URL }})" >> $env:GITHUB_STEP_SUMMARY