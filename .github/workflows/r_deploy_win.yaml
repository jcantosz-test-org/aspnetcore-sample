name: Deploy to Environmnet

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      ENVIRONMENT_URL:
        required: false
        type: string
      ARTIFACT_NAME:
        required: true
        type: string
      ARTIFACT_DOWNLOAD_PATH:
        required: false
        type: string
        default: artifacts
      RELEASE_VERSION:
        required: false
        type: string
      AZURE_WEBAPP_PACKAGE_PATH:
        required: true
        type: string
      WEBAPP_NAME:
        required: false
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      RESOURCE_GROUP:
        required: true

jobs:
  deploy:
    runs-on: windows-2019
    environment: 
      name: ${{ inputs.ENVIRONMENT }}
      url: ${{ inputs.ENVIRONMENT_URL }}
    steps:
      - name: log
        run: |
          echo ${{ inputs.WEBAPP_NAME }}
          echo ${{ inputs.ENVIRONMENT_URL }}
      - uses: actions/checkout@v3
      - name: Download a single artifact
        if: ${{ inputs.ENVIRONMENT == 'dev' || inputs.ENVIRONMENT == 'qa' }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.ARTIFACT_NAME }}
          path: ${{ inputs.ARTIFACT_DOWNLOAD_PATH }}

      - name: Download release
        if: ${{ inputs.ENVIRONMENT == 'uat' || inputs.ENVIRONMENT == 'prod' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download ${{ inputs.RELEASE_VERSION }} --pattern '${{ inputs.ARTIFACT_NAME }}.zip'
          Expand-Archive ${{ inputs.ARTIFACT_NAME }}.zip -DestinationPath ${{ inputs.ARTIFACT_DOWNLOAD_PATH }}

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: run script
        run: |
          az webapp list
          az webapp list --resource-group ${{secrets.RESOURCE_GROUP}}
      - uses: azure/appservice-settings@v1
        with:
          app-name: ${{ inputs.WEBAPP_NAME }}
          mask-inputs: false
          app-settings-json: '[{ "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "1", "slotSetting": false }]'
#       - name: Deploy to Azure WebApp
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ inputs.WEBAPP_NAME }}
#           package: "${{ARTIFACT_DOWNLOAD_PATH}}/${{ inputs.AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: "write deploying info to step summary"
        run: |
          echo "Deployed WebApp ${{ inputs.WEBAPP_NAME }} to ${{ inputs.ENVIRONMENT }} (${{ inputs.ENVIRONMENT_URL }})" >> $env:GITHUB_STEP_SUMMARY
